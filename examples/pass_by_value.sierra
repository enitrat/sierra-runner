type felt = felt;
type Unit = Struct<ut@Tuple>;

libfunc felt_const<1> = felt_const<1>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc function_call<user@pass_by_value::pass_by_value::pass_by_value> = function_call<user@pass_by_value::pass_by_value::pass_by_value>;
libfunc rename<felt> = rename<felt>;
libfunc felt_add = felt_add;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc drop<Unit> = drop<Unit>;

felt_const<1>() -> ([0]);
store_temp<felt>([0]) -> ([2]);
function_call<user@pass_by_value::pass_by_value::pass_by_value>([2]) -> ([1]);
rename<felt>([1]) -> ([3]);
return([3]);
felt_const<1>() -> ([1]);
felt_add([0], [1]) -> ([2]);
struct_construct<Unit>() -> ([3]);
drop<Unit>([3]) -> ();
store_temp<felt>([2]) -> ([4]);
return([4]);

pass_by_value::pass_by_value::main@0() -> (felt);
pass_by_value::pass_by_value::pass_by_value@5([0]: felt) -> (felt);
